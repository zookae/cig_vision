* abstract
* introduction
** 5 forces
Over the past several years the game industry has undergone a series of major changes. The increasing prominence of online and persistent games, rise of mobiles games and digital distribution platforms, and emergence of new business models have all changed fundamental aspects of making and playing games. Players are more diverse, have access to games in more places and at more times, and produce more data and content for developers than ever before. Across these changes five forces have come to the fore:
*** persistent
   (1) persistent games - The rise of MMOGs, social games, and long-term or recurring game experiences has led to long-term data on players within games. Many games have players join, play over long periods of time, and potentially rejoin at later times. Developers are increasingly pressed to develop content that provides for long-term engagement with a game, rather than a closed experience with clear beginning and end.
*** ecosystem
   (2) ecosystem of games - Developers have a wider variety of tools to build games and lowered barriers to distributing games to new users. Together this has led to a greater emphasis on keeping players engaged within an ecosystem of games from a single developer, rather than focusing on experiences only within one game. Developers are increasingly driven to provide new content of multiple kinds that engages players across games. The increasing diversity of game players has led to additional emphasis on ensuring a portfolio of games provides a diverse range of experiences, rather than create a kind of experience within a single game.
*** community
   (3) community - Player communities around games have emerged as a major driving force for the success (and failure) of games. Continuing to engage with communities, providing support for players to socialize within the community, and managing the ways players impact one another's experiences (positively and negatively) are all increasingly pressing concerns.
*** real-virtual
   (4) real-virtual coupling - Games are connecting to the real world in new and more widely used ways. Sensing systems ranging from the Kinect and Wiimote to mobile phone GPS provide more data on players' real-world environment. Output modalities from second screen experiences and mobile phone augmented reality to virtual reality are emerging as new ways to view game content. At the same time these technologies have introduced a host of challenges around how games can interface with and leverage this real-world context and respond to more unstructured forms of information.
*** user-generated content
   (5) user-generated content - Games have historically provided many opportunities for modification (``modding'') and some degree of editing. Recently, however, this force has become a driving aspect of long-term success, exemplified by games including Minecraft, LittleBigPlanet, and Second Life. Developers are increasingly pressured to provide tools for users to create content, manage that content, and promote content within game communities.
** data-centric
Each of these forces provides massive amounts of data to game developers. Research in game AI can leverage this data in a new paradigm of data-driven game AI focused on how to use these sources of data to address novel research questions that emerge within these domains. [weak statement, want something stronger about need to respond]
* 3 waves of game AI
  [waves? metaphors? paradigms?]
  Data-driven game AI leads to a shift in the role of AI in game design and development. Historically, game AI has seen a shift between two waves of research. ``Classical'' game AI developed systems to mediate the role of AI between users and a game (Figure X). AI served the role of an artificial human opponent or playmate, enabling play without requiring other people or filling roles humans would be loathe to fill in a game. The second wave of game AI shifted to developing AI systems that mediate between designers and the coupled user-game systems they develop. AI served to analyze and visualize game data, model players within a game, generate game content, and even potentially adapt game content by fusing modeling and generation. The third wave of game AI that is emerging demands a further step back to study how AI can mediate between game producers and their portfolio of games. AI should support interacting with players and player communities over long spans of time, across multiple games, while bridging in-game and real-world systems and leveraging user-created content.
It should be noted these three waves are not distinct phases, but overlapping sets of concerns and driving problems. Improvements in AI as game designers in turn supports new tools to mediate between a single game and users. Likewise, understanding users within an ecosystem of games leads to new problems for in-game NPC behavior.
** wave 1: AI within game
   [feels rather list-like...]
   [needs a metaphor: wave1=???, wave2=designer, wave3=producer]
   game <-AI-> user
   The first wave of game AI examined how AI can substitute for humans within a game. Compared to non-game AI, game AI put a greater emphasis on creating engaging and entertaining experiences for users, rather than replicating exact human behavior. Competitive NPCs---such as Deep Blue and chess AI---emphasized techniques including alpha-beta search, heuristic reasoning, and compiling and leveraging gameplay database knowledge. Navigation, path-planning, and steering developed methods to author believable motions encoding design knowledge.  Reactive game NPCs employed techniques including state machines, fuzzy logic, decision trees, behavior trees, and most recently hierarchical task networks to aid authoring of character behaviors. More recently probabilistic and utility-based frameworks have come to the fore, along with a few but prominent examples of learning agents in games. Across these areas is the shared emphasis on optimizing for a player's experience within a game while meeting the tight constraints of running AI within a given game system.
** wave 2: AI designer
   (game <-> user) <-AI-> designer
   The second wave of game AI concerned itself with a metaphor of AI as a game designer. Game designers are responsible for building and defining a game, analyzing how players interact with the game, and iteratively refining a game to achieve a design vision. For AI designers the prominent challenges roughly align with procedural content generation to produce game content and game analytics to understand game content, with some exploring ways to fuse the two processes in a closed loop adaptation approach.
   Procedural content generation concerns itself with generating any and all components of games (Y+T, Hendrikx). Offline generation emphasizes producing content designers may curate or refine, while just-in-time generation focuses on tailoring content to a give user. Generation techniques have a taken a variety of approaches including evolutionary algorithms [REFS], constraint solvers [Horswill, Smith], and planning [REFs: story gen?]. A primary concern for these researchers has been ways to appropriately represent game content to suit generation algorithms, while still providing means for users to interact with generation systems to author desired content and outcomes.
   Game analytics studies aggregating, understanding, and visualizing player behavior to support designer understanding. Game data visualization [REFs] focuses on designer understanding game systems to inform the design of game systems and AI agents. Player modeling research [REFs] examines methods to describe and predict player behavior, potentially to be used by designers or automated AI systems in response. While not a traditional domain of game AI, player modeling has becoming increasingly prominent as AI agents shift to learning to adapt to players. Machine learning [REFs] and evolutionary computing [REFs] are the primary areas currently being employed to perform these modeling tasks.
   Game adaptation combines content generation and player modeling to enable AI designers that tailor games to indivdual players. Game generation takes this adaptation process to its extreme by creating entire games driven by (real or simulated) feedback. Game adaptation emphasizes a closed loop of modeling player actions and adjust game content based on design goals for player behavior [REF: smith refraction, DM references], player skill acquisition [REF: andersen], or maximizing player enjoyment [Yu, Shaker], or preferences [Yu]. Prominent examples of game generation have explored the automatic generation of board games [REFs: Hom, Browne], platforming games [Cook], arcade games [Treanor, Nelson, Smith], and role-playing games [Zook?]. Across this research is a shared emphasis on encoding design knowledge both of game systems and design goals in a way that can be used to automatically adapt or create content.
** wave 3: AI producer
   ((game <-> user) <-> designer) <-AI-> producer/business
   The third wave of game AI uses a metaphor of AI as game producer. Producers concern themselves with the entire set of games and game content being made by a company, along with related aspects of managing player communities. AI producers mandate a shift from single player experiences within a closed game to extended player experiences within an open game, understanding a single player across multiple games, and understanding how multiple players interact as an out-of-game community. AI designers emphasized player models that captured the activity of a single user as a single character. AI producers require a shift to distinguishing characters (in-game characters or personas) from players (agents manipulating those characters). AI producers also leverage a broader sense of context for enhancing game experiences including the community of players, the real-world context of their activities, and the content they create for one another. Together, this research places a premium on broadening the scope of game AI to better integrate the increasingly pervasive nature of games into how games entertain and engage users. Games no longer are sharply bound by a single delivered product and game AI ought to respond by incorporating these newly opened borders for new research domains.
* five force research
AI producers use the wealth of data being provided by the five forces driving recent developments in industry games for meeting the pressures imposed by these forces on developers. In each case these forces provide unique opportunities for data-driven approaches to game AI that enhance player experience through richer sources of information and emerging modes of game-related interaction. Rather than replace earlier waves of game AI, these five forces introduce novel opportunities to address concerns and enhance techniques from earlier waves.
** persistent games
   AI stretching to long-term AI-player relationships
   full user funnel (acquire, retain, re-aquire, refer)

Persistent games shift from closed games comprising time investments typically on the order of days to ongoing and extended game experiences spanning months or years generating long-term data on player history and activities. AI producers meet these needs by addressing the full lifetime of a player, including the standard business concerns of acquiring new players, retaining players over a long period of time, and reacquiring lapsed players. Key research questions around using long-term data to improve player engagement focus on:(1) lifelong agents, (2) gameplay support, and (3) engagement-oriented content generation. Unifying these is a view of game AI providing for long-term player engagement across an increasingly diverse group of players.
*** lifelong agents
    [TODO: badly structured]
Lifelong game agents are NPCs that learn about you as a player over time. Lifelong agents serve as long term companions (or adversaries) that acknowledge changes in players over time and use historical interactions with players to shift their behavior.
    [vignette about interactions? ``AI that knows my name'', chiding player, probing weaknesses]

While relatively unexplored in the domain of games, lifelong agents and research in lifelong learning have become prevalent research areas in other contexts. Bickmore and company [REF] have explored the design and development of lifelong agents, examining ways thse agents can foster social and emotional interactions in settings including health care [REF] and museum guides [REF]. Particularly promising problems for game AI research involve fostering player empathy for companions---and enmity for rivals---or engaging users in social interactions with game world NPCs. In addition, adapting agent behaviors to foster long-term engagement stands as a key problem to the success of many online games that thrive on vibrant and stable communities of players.

In machine learning the domain of lifelong learning investigates transferring knowledge between particular tasks, continually learning and refining knowledge, uncovering representations for complex information, and incorporating guidance or feedback from humans [good REF?]. For game AI these tasks manifest in terms of companions that work with players through a long series of open-ended (and possibly extending) tasks. As games now typically involve patches, expansions, downloadable content and other incremental updates research into how agents can adapt to these changes in a persistent game environment become increasingly valuable.
*** gameplay support
    Gameplay support agents act as mentors to players in order to help them remain engaged with a game. Players come to games with disparate sets of skills and gameplay mentors can help players overcome challenges that might otherwise cause them to quit playing a game. Gameplay support AI observes players, learns their gameplay strengths and weaknesses, and intervenes to provide players with appropriate hints, training materials, or content adjustments as needed. If a player shows an inability to counter a particular strategy in an RTS the AI would identify the missing player skills and could provide instruction about the appropriate response, training videos, or set up game scenarios to practice the requisite skill. 

Existing research in interactive tutoring systems, drama management, and dynamic difficulty adjustment relate to the needs for gameplay support AI. Interactive tutoring systems [REF?] are educational systems developed to help learners perform various tasks such as arithmetic [Nan Li], algebra [actr], or programming [REF?]. Applying interactive tutors to support long-term player engagement will require new techniques for representing player skills, modeling players based on their game activities, devising interventions to improve those skills, and appropriately adjusting those interventions in response to tutoring success or failure. 

Drama (or experience) management [DM overviews (Mateas 1999, Roberts+Isbell, Riedl+Bulitko)] systems are disembodied virtual agents that monitor virtual worlds and intervene to drive a narrative forward based on models of player experience quality. Drama managers typically intervene by directing in-game agents or altering game world events. Research on drama managers emphasizes questions around balancing authorial control and player autonomy, the degree of game NPC autonomy compared to direction, and deciding when and how to best intervene in narratives for dramatic [REF], educational [REF: rowe/lester?], or entertainment purposes (e.g. in ``Left 4 Dead'' or ``Darkspore'') [REFs?]. Applying drama managers to game support entails better understanding how to train players while meeting all the above challenges. 
% (not sure where to put) Drama management has recently emerged in games in the form of AI directors made popular by ``Left 4 Dead''.
    
Dynamic difficult adjustment (DDA) systems make real-time adjustments to game parameters [REF], item placement [Hunicke], or other content to suit player abilities. Typically framed in terms of Csikszentmihalyi's flow theory, DDA attempts to ensure players maintain has a desired level of performance in order to improve player engagement. Techniques for DDA have involved classical cybernetic systems [REF: Hunicke], rule-based approaches [REF: van Lankveld], multi-agent systems [Pons], optimization of generator output from neuro-evolutionary [REF: Yannakakis/Shaker] or machine learning [REF: Yu, Zook?] systems, or logic programming on player execution [REF: Smith, Andersen]. Adapting these techniques for game support will require additional efforts to capture long-term effects of actions on player engagement and richer models of player skills related to various gameplay domains.
*** content generation for long-term engagement
    [needs better name]
Content generation for long-term engagement models player values, preferences, and motivations to generate content that continues player engagement over long periods of time and encourages players to return to a game they may have lost interest in. Game support AI addresses potential ``pain points'' of gameplay to prevent player dropout and improve acquisition of potential players. Long-term engagement content generation focuses on how to best retain players once they have made some level of commitment to a game or encourage players who have lapsed from a game to return. These systems emphasize player motivations, drawing from views of persuasive computing [REF: Fogg] to agents that encourage particular player behaviors. 

Compared to previous work on content generation, long-term engagement has goals of incentivizing players to take advantage of aspects of a game they already enjoy or to explore new elements of a game they might not have. Personalized achievements can achieve these goals through modeling how players value different aspects of games and creating mini-games within a game to encourage particular player behaviors. An AI system might encourage players to try an alternative way of completing a FPS mission by creating a new achievement that incentivized competitive players to complete the mission within a strict time limit or incentivized more exploratory players to collect hidden or hard-to-find objects in the mission. Other kinds of content to motivate players no doubt exist: what these systems are, how to generate them, when to provide them, and what value they provide to players (potentially respecting concerns for fairness or equal experiences and opportunities) are all open research questions.
** ecosystem of games
   AI concerned with players across multiple distinct games

Ecosystems of games shift the focus from a player's experience within a single game to the experience players have across a host of games. Connecting characters and gameplay from a single player spanning multiple games opens new opportunities to interact with players rather than single-game characters, model and use generic player preferences for content and skills within games for personalization or content tailoring, and experiment with game designs online to build and generalize design knowledge across games. Previous efforts at player modeling and content generation can serve new roles in understanding how players interact with many distinct games, requiring advances in representing, collecting, and reasoning on game design knowledge.
*** cross-game agents
Cross-game agents interact with users across multiple different games. Examples include recurring characters, guides, guardian angels, and rivals or long-term adversaries. Recurring characters maintain a stable persona across multiple games, contextualized to new settings in order to create a sense of persistence across games. Guides help players navigate a universe of game content, introduce or explain new games, and remind players about older games. Guardian angels and rivals are two sides to agents that act similar to long-term human playmates, encountering players across multiple games and making reference to experiences in other games. While guardian angels strive to help players in times of need, rivals aim to impede players or vie to outdo player achievements.

Cross-game agents can draw from research on competitive cross-game AI and work on socially present agents. The general game playing competition has spawned a stream of research on methods to reason about logical representations of game state and rule systems to enable AI agents to play games of generic specification [REF]. Recent efforts have also explored methods for AI agents to play a diverse set of games by interfacing with emulated game systems [bellemare, new guy from CMU]. Applying general game playing research to the cross-game setting requires research on ways to serve cross-game goals for entertainment, rather than pure competition. Mapping NPC behavior to multiple settings is a key research challenge in this context. Representing and reasoning on semantic content---game story, setting, theme, and so on---will also be paramount to these developments.

Research into socially present agents has explored how to control in-game behavior in reference to out-of-game context. Socially present agents may make reference to historical interactions with players (remembering a returning player in a new session or an aggressive move made in another game) and explicitly signal social states not relevant to in-game behavior (e.g. boredom when a player spends a long time taking a turn) [Paiva]. Exploring how out-of-game behaviors can best reference in-game behaviors in online or virtual settings will be crucial to the success of cross-game AI.

cf paiva, bellemare, GGP, ashok?
[Techniques for meta-reasoning and debugging agent knowledge as games are played can potentially help meet some of the needs to reduce authoring game-specific behavior across many games [REF: ashok].]
*** content discovery, recommendation, adaptation
Cross-game content generation and adaptation explores the unique opportunities for developing and designing games sensitive to an environment of multiple games. Cross-game data enables mining game designs for general design knowledge. Taken to its extreme, such design knowledge can support the generation of new games that span genres, moving beyond the genre-focused efforts currently being explored. Understanding player behavior across games can additionally enable the recommendation of content from other games and ultimately lead to pre-adapting game experiences to players based on their behvior in other games. 
*** game generation + design mining
Core to many of these problems is the challenge of representing, reasoning on, and acquiring game design knowledge. Current approaches to game generation have employed hand-authored knowledge to enable authoring games or generating games. Authoring tools allow humans to create content (sometimes in conjunction with an AI system) in a variety of genres including arcade games [Treanor], platformers [g smith], and action-adventure games [dormans]. Generation methods combine formal design representations with algorithms for producing content, covering genres including arcade games [a smith, togelius+schmidhuber], board games [Browne, Hom+Marks], card games [Mahlmann], platformers [Cook], or role-playing games [Hartsook]. Cross-game play puts a premium on new research to represent more generic game structures in a way that spans multiple genres. Many of the existing formalisms may be able to support such extensions, but how to best bridge genres remains an open question.

Despite substantial efforts to reason on design knowledge, relatively little work has explored ways to acquire that knowledge or refine it. A/B testing has become a prominent practice for online game design, exemplified by the efforts of Zynga to optimize game designs. Analogous experimental methods have been used to understand how game designs impact player engagement and learning [lomas] or negative behavior [riot presentation at gdc?]. Leveraging the unique potential of online distribution methods for rapid iteration and experimentation can open the way to addressing the challenges of extracting cross-game design knowledge.

Cross-game design knowledge itself can serve both to recommend content to players and adapt new games based on a player's preferences, history, and skills. Understanding how players share behaviors across games or play different games to fulfill different interests and needs is a key challenge for game recommendation. Generalizing design knowledge can serve as a key anchor to understand what games may be most valued by players and which may lead to negative player experiences. Design knowledge at the level of per-game content and systems enables the adaptation of new games to suit player preferences, skip training unneeded for players already familiar with game or genre conventions, or complement activities that have become repetitive from playing other games.
[reference transfer learning stuff like ICARUS?]
** community around games
   multi-player in sense of persistent community
*** group-oriented content generation
*** matchmaking + mentoring -> socializing
*** social network modeling + data
*** fraud, security, toxic behavior
** real-virtual coupling
   ``pervasive games''?
*** real-world data into games; real-world settings for games
*** pro-active sensing
** user-generated content
*** user-AI interaction
    g smith - mixed initiative
    stanley - UGC for games; IEC
**** user feedback
*** crowdsourcing
*** content semantics, recommendation, mining
    kumar
* conclusion
